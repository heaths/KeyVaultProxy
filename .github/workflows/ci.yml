name: ci
on:
  pull_request:
    paths-ignore:
    - '**.md'
  push:
    branches:
    - master
    paths-ignore:
    - '**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        - windows-latest
        include:
        - os: macos-latest
          platform: macos
        - os: ubuntu-latest
          platform: linux
        - os: windows-latest
          platform: windows

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.1.808'

    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Copy .NET Core runtime SxS
      shell: pwsh
      run: |
        # Work around https://github.com/actions/setup-dotnet/issues/25
        $DOTNET_21_ROOT = $env:DOTNET_ROOT -replace '3\.1\.\d+', '2.1.808'
        if ($env:OS -eq 'Windows_NT') {
          xcopy "$DOTNET_21_ROOT\shared" "${env:DOTNET_ROOT}\shared" /b /e /h /q /y
        } else {
          rsync -a $DOTNET_21_ROOT/shared/* ${env:DOTNET_ROOT}/shared
        }

    - name: Build
      run: >
        dotnet build KeyVaultProxy.sln
        -c Release -o bin/Release
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_NOLOGO: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    - id: Test
      name: test
      run: >
        dotnet test KeyVaultProxy.sln
        -c Release -o bin/Release
        --no-build
        -l trx -r bin/Release/TestResults/${{ matrix.platform }}
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
        DOTNET_NOLOGO: 1
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    - uses: actions/upload-artifact@v2
      if: success() || steps.test.outcome == 'failure'
      with:
        name: testresults-${{ matrix.platform }}
        path: bin/Release/TestResults/
